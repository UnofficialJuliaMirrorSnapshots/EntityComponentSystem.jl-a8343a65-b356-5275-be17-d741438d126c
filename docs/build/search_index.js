var documenterSearchIndex = {"docs":
[{"location":"#API-1","page":"API","title":"API","text":"","category":"section"},{"location":"#","page":"API","title":"API","text":"World","category":"page"},{"location":"#EntityComponentSystem.World","page":"API","title":"EntityComponentSystem.World","text":"World\n\nA collection of entities and their components.\n\n\n\n\n\n","category":"type"},{"location":"#","page":"API","title":"API","text":"ECSComponent","category":"page"},{"location":"#EntityComponentSystem.ECSComponent","page":"API","title":"EntityComponentSystem.ECSComponent","text":"ECSComponent\n\nA representation of an entity component system component.\n\n\n\n\n\n","category":"type"},{"location":"#","page":"API","title":"API","text":"EntityKey","category":"page"},{"location":"#EntityComponentSystem.EntityKey","page":"API","title":"EntityComponentSystem.EntityKey","text":"EntityKey\n\nA generational index to an entity that will fail in usage if the entity has been destroyed.\n\n\n\n\n\n","category":"type"},{"location":"#","page":"API","title":"API","text":"register!(world::World,::Type{C}) where C <: ECSComponent","category":"page"},{"location":"#EntityComponentSystem.register!-Union{Tuple{C}, Tuple{World,Type{C}}} where C<:ECSComponent","page":"API","title":"EntityComponentSystem.register!","text":"register!(world::World,::Type{C}) where C <: ECSComponent\n\nRegisters storage space for a component type.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"createentity!(world::World)","category":"page"},{"location":"#EntityComponentSystem.createentity!-Tuple{World}","page":"API","title":"EntityComponentSystem.createentity!","text":"createentity!(world::World)\n\nAllocates an entity and returns an entity key.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"getentity(world::World,key::EntityKey)","category":"page"},{"location":"#EntityComponentSystem.getentity-Tuple{World,EntityKey}","page":"API","title":"EntityComponentSystem.getentity","text":"getentity(world::World,key::EntityKey)\n\nReturns entity index if entity key is still valid.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"destroyentity!(world::World,entity::EntityKey)","category":"page"},{"location":"#EntityComponentSystem.destroyentity!-Tuple{World,EntityKey}","page":"API","title":"EntityComponentSystem.destroyentity!","text":"destroyentity!(world::World,entity::EntityKey)\n\nDeallocates entity and memory if entity key is valid.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"addcomponent!(world::World,entity::EntityKey,component::C) where C <: ECSComponent","category":"page"},{"location":"#EntityComponentSystem.addcomponent!-Union{Tuple{C}, Tuple{World,EntityKey,C}} where C<:ECSComponent","page":"API","title":"EntityComponentSystem.addcomponent!","text":"addcomponent!(world::World,entity::EntityKey,component::C) where C <: ECSComponent\n\nAssociate a component with an entity key.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"removecomponent!(world::World,entity::EntityKey,::Type{C}) where C <: ECSComponent","category":"page"},{"location":"#EntityComponentSystem.removecomponent!-Union{Tuple{C}, Tuple{World,EntityKey,Type{C}}} where C<:ECSComponent","page":"API","title":"EntityComponentSystem.removecomponent!","text":"removecomponent!(world::World,entity::EntityKey,::Type{C}) where C <: ECSComponent\n\nDissociate a component of a specific type with an entity key.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"getcomponent(world::World,entity::EntityKey,::Type{C}) where C <: ECSComponent","category":"page"},{"location":"#EntityComponentSystem.getcomponent-Union{Tuple{C}, Tuple{World,EntityKey,Type{C}}} where C<:ECSComponent","page":"API","title":"EntityComponentSystem.getcomponent","text":"getcomponent(world::World,entity::EntityKey,::Type{C}) where C <: ECSComponent\n\nGet a component of a specific type of an entity key.\n\n\n\n\n\n","category":"method"},{"location":"#","page":"API","title":"API","text":"runsystem!(f,world::World,types::Array{DataType,1})","category":"page"},{"location":"#EntityComponentSystem.runsystem!-Tuple{Any,World,Array{DataType,1}}","page":"API","title":"EntityComponentSystem.runsystem!","text":"runsystem!(f,world::World,types::Array{DataType,1})\n\nFor each entity with components of passed in types, call provided function with that entity and components.\n\n\n\n\n\n","category":"method"}]
}
